from lib2to3.fixer_util import Comma

from aiogram import Router, F, types
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

from api import user_service
from bot import bot
from decorator.decorators import required_admin

router = Router()


@router.message(F.text == "‚ö°Ô∏è –ë—ã—Å—Ç—Ä—ã–π VPN –æ—Ç –í—ã—à–∫–∏–Ω—Ü–µ–≤")
@router.message(Command("vpn"))
async def get_settings(message: Message, state: FSMContext):
    await state.clear()
    await message.delete()

    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="‚ö°Ô∏è–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞",
                                      url="https://t.me/sigmavpn_xbot?start=cHJvbW89SFNFX1BFUk1fSEVMUEVSJnNvdXJjZT1IU0VfSEVMUEVS"))

    await message.answer(
        "<b>Sigma VPN</b> ‚Äì –±—ã—Å—Ç—Ä—ã–π, –Ω–µ–¥–æ—Ä–æ–≥–æ–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π VPN –Ω–∞ –±–∞–∑–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ VLESS, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ ‚ú®üßë‚Äçüíª\n\n" +
        "–í —Å–µ—Ä–≤–∏—Å–µ –Ω–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏, –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ö–æ—Ç—å —Å–∫–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –∫–æ–º—Ñ–æ—Ä—Ç–æ–º —Å–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º üîí",
        parse_mode=ParseMode.HTML, reply_markup=keyboard.as_markup())


@router.message(Command("test"))
async def test(message: Message):
    text = ("*–ü—Ä–∏–≤–µ—Ç, —Å—Ç—É–¥–µ–Ω—Ç!* üëã\n\n"
            "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —Å–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç ‚Äì *Sigma VPN!*\n"
            "–û–Ω –±—ã—Å—Ç—Ä–µ–µ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–µ–µ, —á–µ–º OKVPN, –∏... –¥–µ—à–µ–≤–ª–µ! üöÄ\n\n"

            "–ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –±–æ—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∏ *3 –¥–Ω—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞!* ü§©\n\n"

            "–ó–∞—â–∏—Ç–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ —Å Sigma VPN! üîê")

    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="‚ö°Ô∏è–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞",
                                      url="https://t.me/sigmavpn_xbot?start=cHJvbW89SFNFX1BFUk1fSEVMUEVSJnNvdXJjZT1IU0VfSEVMUEVS"))

    await message.answer(text, reply_markup=keyboard.as_markup(), parse_mode=ParseMode.MARKDOWN)


@router.message(Command("sigmavpn1"))
@required_admin
async def mailing_sigmavpn(message: Message):
    await __mailing(message, 1)

@router.message(Command("sigmavpn2"))
@required_admin
async def mailing_sigmavpn2(message: Message):
    await __mailing(message, 2)


@router.message(Command("sigmavpn3"))
@required_admin
async def mailing_sigmavpn3(message: Message):
    await __mailing(message, 3)


@router.message(Command("sigmavpn4"))
@required_admin
async def mailing_sigmavpn4(message: Message):
    await __mailing(message, 4)


@router.message(Command("sigmavpn5"))
@required_admin
async def mailing_sigmavpn5(message: Message):
    await __mailing(message, 0)


async def __mailing(message: Message, num: int):
    await message.delete()
    await message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å")

    users = await user_service.get_user_ids()

    text = ("*–ü—Ä–∏–≤–µ—Ç, —Å—Ç—É–¥–µ–Ω—Ç!* üëã\n\n"
            "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —Å–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç ‚Äì *Sigma VPN!*\n"
            "–û–Ω –±—ã—Å—Ç—Ä–µ–µ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–µ–µ, —á–µ–º OKVPN, –∏... –¥–µ—à–µ–≤–ª–µ! üöÄ\n\n"

            "–ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –±–æ—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∏ *3 –¥–Ω—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞!* ü§©\n\n"

            "–ó–∞—â–∏—Ç–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ —Å Sigma VPN! üîê")

    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="‚ö°Ô∏è–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞",
                                      url="https://t.me/sigmavpn_xbot?start=cHJvbW89SFNFX1BFUk1fSEVMUEVSJnNvdXJjZT1IU0VfSEVMUEVS"))

    actual = 0

    expected = 0
    for i, user in enumerate(users):
        if i % 5 == num:
            expected += 1
            try:
                await bot.send_message(user, text=text, parse_mode=ParseMode.MARKDOWN, reply_markup=keyboard.as_markup())
                actual += 1
            except Exception as e:
                pass

    await message.answer(f"–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ ‚Äì {expected}, —É—Å–ø–µ—à–Ω–æ ‚Äì {actual}")
