from aiogram import Router, types
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from api import user_service
from decorator.decorators import typing_action, required_admin

router = Router()


# @router.message(Command("test"))
# async def test(message: types.Message, state: FSMContext):
#     keyboard = ReplyKeyboardBuilder()
#
#     keyboard.row(KeyboardButton(text="test Select People", callback_data="132",
#                                       request_users=KeyboardButtonRequestUsers(request_id=123, request_username=True, max_quantity=1)))
#     await message.answer("–í—ã–±–µ—Ä–∏ —á–µ–ª–∞", reply_markup=keyboard.as_markup())
#
# @router.message(F.content_type == ContentType.USER_SHARED)
# async def test2(message: Message, state: FSMContext):
#     await message.answer("123")
#     #print(message.users_shared.users[0].username)


@router.message(Command('help', 'menu'))
@router.message(lambda F: F.text == ('help' or '–ø–æ–º–æ—â—å' or '–ø–æ–º–æ–≥–∏'))
@typing_action
async def get_help(message: types.Message, state: FSMContext):
    await state.clear()
    await message.delete()

    await send_help_message(message)


@typing_action
async def send_help_message(message: types.Message):
    text_help = ("<b>–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É:</b>\n\n"
                 "üîπ /start ‚Äî <i>–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã. –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤—ã–±–æ—Ä –∫—É—Ä—Å–∞, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≥—Ä—É–ø–ø—ã –∏ –ø–æ–¥–≥—Ä—É–ø–ø—ã</i>\n\n"
                 "üîπ /settings ‚Äî <i>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ</i>\n\n"
                 "üîπ /menu ‚Äî <i>–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é –¥–ª—è —Ä–∞–±–æ—Ç—ã</i>\n\n"
                 "üîπ /schedule ‚Äî <i>–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</i>\n\n"
                 "üîπ /base_schedule ‚Äî <i>–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –º–æ–¥—É–ª—å</i>\n\n"
                 "üîπ /sport_schedule ‚Äî <i>–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–∑-—Ä—ã</i>\n\n"
                 "üîπ /today ‚Äî <i>–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</i>\n\n"
                 "üîπ /tomorrow ‚Äî <i>–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞</i>\n\n"
                 "‚ùó –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–ø–∞–¥—É—Ç. "
                 "–ß—Ç–æ–±—ã –∏—Ö –≤–µ—Ä–Ω—É—Ç—å, –≤–≤–µ–¥–∏ /menu –µ—â–µ —Ä–∞–∑! üôÇ")

    keyboard_markup_up = ReplyKeyboardBuilder()
    get_schedule_text_button = types.KeyboardButton(text="üíº –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é")
    get_base_schedule_text_button = types.KeyboardButton(text="üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –º–æ–¥—É–ª—å")

    keyboard_markup_up.row(get_schedule_text_button)
    keyboard_markup_up.row(types.KeyboardButton(text="üìÖ –ù–∞ —Å–µ–≥–æ–¥–Ω—è"), types.KeyboardButton(text="‚û°Ô∏è –ù–∞ –∑–∞–≤—Ç—Ä–∞"))
    keyboard_markup_up.row(get_base_schedule_text_button, types.KeyboardButton(text="üèì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–∑-—Ä—ã"))
    keyboard_markup_up.row(types.KeyboardButton(text="üñ•Ô∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å"), types.KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
    keyboard_markup_up.row(types.KeyboardButton(text="‚ö°Ô∏è –ë—ã—Å—Ç—Ä—ã–π VPN –æ—Ç –í—ã—à–∫–∏–Ω—Ü–µ–≤"), types.KeyboardButton(text="üí≥ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"))
    keyboard_markup_up.row_width = 4

    keyboard = keyboard_markup_up.as_markup()
    keyboard.resize_keyboard = True

    await message.answer(text_help, reply_markup=keyboard, parse_mode='HTML')


@required_admin
@router.message(Command("update_test"))
async def update_test(message: types.Message):
    text = ("* –ù–∞–∫–æ–Ω–µ—Ü –º—ã –¥–æ–¥–µ–ª–∞–ª–∏ —ç—Ç–æ * üéâ\n\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ üì± –∏–ª–∏ –ü–ö üíª"
            "–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—Å–µ–≥–¥–∞ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ —Å–≤–æ–∏—Ö –∑–∞–Ω—è—Ç–∏–π –∏ —Å–æ–±—ã—Ç–∏–π, –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—è –≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã!\n\n"
            '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n'
            "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏ ü©∑\n\n"
            "P.S. –¢–∞–∫–∂–µ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª @hse\\_perm\\_helper\\_news, –∏–Ω–æ–≥–¥–∞ –º—ã —Ç–∞–º –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —à—Ç—É–∫–∏")

    keyboard_markup_up = ReplyKeyboardBuilder()
    get_schedule_text_button = types.KeyboardButton(text="üíº –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é")
    get_base_schedule_text_button = types.KeyboardButton(text="üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –º–æ–¥—É–ª—å")

    keyboard_markup_up.row(get_schedule_text_button)
    keyboard_markup_up.row(types.KeyboardButton(text="üìÖ –ù–∞ —Å–µ–≥–æ–¥–Ω—è"), types.KeyboardButton(text="‚û°Ô∏è –ù–∞ –∑–∞–≤—Ç—Ä–∞"))
    keyboard_markup_up.row(get_base_schedule_text_button, types.KeyboardButton(text="üèì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–∑-—Ä—ã"))
    keyboard_markup_up.row(types.KeyboardButton(text="üñ•Ô∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å"), types.KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
    keyboard_markup_up.row(types.KeyboardButton(text="‚ö°Ô∏è –ë—ã—Å—Ç—Ä—ã–π VPN –æ—Ç –í—ã—à–∫–∏–Ω—Ü–µ–≤"), types.KeyboardButton(text="üí≥ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"))
    keyboard_markup_up.row_width = 4

    keyboard = keyboard_markup_up.as_markup()
    keyboard.resize_keyboard = True

    await message.bot.send_message(chat_id=message.chat.id, text=text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)


@required_admin
@router.message(Command("update"))
async def update(message: types.Message):
    text = ("* –ù–∞–∫–æ–Ω–µ—Ü –º—ã –¥–æ–¥–µ–ª–∞–ª–∏ —ç—Ç–æ * üéâ\n\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ üì± –∏–ª–∏ –ü–ö üíª"
            "–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—Å–µ–≥–¥–∞ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ —Å–≤–æ–∏—Ö –∑–∞–Ω—è—Ç–∏–π –∏ —Å–æ–±—ã—Ç–∏–π, –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—è –≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã!\n\n"
            '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n'
            "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏ ü©∑\n\n"
            "P.S. –¢–∞–∫–∂–µ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª @hse\\_perm\\_helper\\_news, –∏–Ω–æ–≥–¥–∞ –º—ã —Ç–∞–º –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —à—Ç—É–∫–∏")

    keyboard_markup_up = ReplyKeyboardBuilder()
    get_schedule_text_button = types.KeyboardButton(text="üíº –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é")
    get_base_schedule_text_button = types.KeyboardButton(text="üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –º–æ–¥—É–ª—å")

    keyboard_markup_up.row(get_schedule_text_button)
    keyboard_markup_up.row(types.KeyboardButton(text="üìÖ –ù–∞ —Å–µ–≥–æ–¥–Ω—è"), types.KeyboardButton(text="‚û°Ô∏è –ù–∞ –∑–∞–≤—Ç—Ä–∞"))
    keyboard_markup_up.row(get_base_schedule_text_button, types.KeyboardButton(text="üèì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–∑-—Ä—ã"))
    keyboard_markup_up.row(types.KeyboardButton(text="üñ•Ô∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å"), types.KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
    keyboard_markup_up.row(types.KeyboardButton(text="‚ö°Ô∏è –ë—ã—Å—Ç—Ä—ã–π VPN –æ—Ç –í—ã—à–∫–∏–Ω—Ü–µ–≤"), types.KeyboardButton(text="üí≥ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"))
    keyboard_markup_up.row_width = 4

    keyboard = keyboard_markup_up.as_markup()
    keyboard.resize_keyboard = True

    ids = await user_service.get_user_ids()

    for user in ids:
        try:
            await message.bot.send_message(chat_id=user, text=text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN)
        except:
            continue

    await message.answer("completed")
